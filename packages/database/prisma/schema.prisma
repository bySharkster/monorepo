generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

model Lead {
  id        String   @id @default(uuid())
  email     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?

  @@map("leads")
  @@schema("public")
}

model Appointment {
  id                String            @id @default(dbgenerated("gen_random_uuid()"))
  date              DateTime          @db.Date
  time              DateTime          @db.Time(6)
  place             String
  status            AppointmentStatus @default(PENDING) @map("status")
  createdAt         DateTime          @default(now()) @map("created_at")
  updatedAt         DateTime          @updatedAt @map("updated_at")
  confirmedAt       DateTime?         @map("confirmed_at")
  createdById       String            @map("created_by_id")
  reviewedById      String?           @map("reviewed_by_id")
  vendorId          String?           @map("vendor_id")
  phoneNumber       String            @map("phone_number")
  reassignmentCount Int               @default(0) @map("reassignment_count")
  isArchived        Boolean           @default(false)

  @@map("appointments")
  @@schema("public")
}

model User {
  email         String   @unique
  name          String?
  role          UserRole @default(USER)
  id            String   @id @default(uuid()) @db.Uuid
  avatar_url    String?
  darkMode      Boolean  @default(false) @map("dark_mode")
  notifications Boolean  @default(true)

  @@map("profiles")
  @@schema("public")
}

model Product {
  name        String @unique
  price       Float
  commission  Float
  description String
  slug        String @unique
  id          Int    @id @default(autoincrement()) @db.SmallInt
  photo_url   String

  @@map("products")
  @@schema("public")
}

model Sale {
  id             String     @id @default(uuid())
  status         SaleStatus @default(PENDING)
  appointmentId  String     @map("appointment_id")
  createdAt      DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  finalSalePrice Float      @map("final_sale_price")
  vendorId       String     @map("vendor_id")

  @@map("sales")
  @@schema("public")
}

model AppointmentProduct {
  id            String  @id @default(uuid())
  quantity      Int
  isReference   Boolean @default(false) @map("is_reference")
  appointmentId String  @map("appointment_id")
  productId     String  @map("product_id")

  @@map("appointment_products")
  @@schema("public")
}

model SaleProduct {
  id        String @id @default(uuid())
  quantity  Int
  price     Float
  productId String @map("product_id")
  saleId    String @map("sale_id")

  @@map("sale_products")
  @@schema("public")
}

model testimonials {
  id        BigInt  @id @default(autoincrement())
  testimony String?
  name      String?

  @@schema("public")
}

enum AppointmentStatus {
  PENDING
  ASSIGNED
  CONFIRMED
  COMPLETED
  CANCELLED

  @@schema("public")
}

enum UserRole {
  ADMIN
  USER
  VENDOR
  REVIEWER
  CREATOR

  @@schema("public")
}

enum SaleStatus {
  PENDING
  COMPLETED
  NOSALE

  @@schema("public")
}
